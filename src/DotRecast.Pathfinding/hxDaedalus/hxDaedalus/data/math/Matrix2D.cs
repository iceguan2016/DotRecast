// Generated by Haxe 4.3.6

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxDaedalus.data.math {
	public class Matrix2D : global::haxe.lang.HxObject {
		
		public Matrix2D(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Matrix2D(global::haxe.lang.Null<double> a_, global::haxe.lang.Null<double> b_, global::haxe.lang.Null<double> c_, global::haxe.lang.Null<double> d_, global::haxe.lang.Null<double> e_, global::haxe.lang.Null<double> f_) {
			global::hxDaedalus.data.math.Matrix2D.__hx_ctor_hxDaedalus_data_math_Matrix2D(this, a_, b_, c_, d_, e_, f_);
		}
		
		
		protected static void __hx_ctor_hxDaedalus_data_math_Matrix2D(global::hxDaedalus.data.math.Matrix2D __hx_this, global::haxe.lang.Null<double> a_, global::haxe.lang.Null<double> b_, global::haxe.lang.Null<double> c_, global::haxe.lang.Null<double> d_, global::haxe.lang.Null<double> e_, global::haxe.lang.Null<double> f_) {
			unchecked {
				double f_1 = ( ( ! (f_.hasValue) ) ? (((double) (0) )) : ((f_).@value) );
				double e_1 = ( ( ! (e_.hasValue) ) ? (((double) (0) )) : ((e_).@value) );
				double d_1 = ( ( ! (d_.hasValue) ) ? (((double) (1) )) : ((d_).@value) );
				double c_1 = ( ( ! (c_.hasValue) ) ? (((double) (0) )) : ((c_).@value) );
				double b_1 = ( ( ! (b_.hasValue) ) ? (((double) (0) )) : ((b_).@value) );
				double a_1 = ( ( ! (a_.hasValue) ) ? (((double) (1) )) : ((a_).@value) );
				__hx_this.a = a_1;
				__hx_this.b = b_1;
				__hx_this.c = c_1;
				__hx_this.d = d_1;
				__hx_this.e = e_1;
				__hx_this.f = f_1;
			}
		}
		
		
		public double a;
		
		public double b;
		
		public double c;
		
		public double d;
		
		public double e;
		
		public double f;
		
		public virtual void identity() {
			unchecked {
				this.a = ((double) (1) );
				this.b = ((double) (0) );
				this.c = ((double) (0) );
				this.d = ((double) (1) );
				this.e = ((double) (0) );
				this.f = ((double) (0) );
			}
		}
		
		
		public virtual void translate(double tx, double ty) {
			this.e += tx;
			this.f += ty;
		}
		
		
		public virtual void scale(double sx, double sy) {
			this.a *= sx;
			this.b *= sy;
			this.c *= sx;
			this.d *= sy;
			this.e *= sx;
			this.f *= sy;
		}
		
		
		public virtual void rotate(double rad) {
			double cos = global::System.Math.Cos(((double) (rad) ));
			double sin = global::System.Math.Sin(((double) (rad) ));
			double a_ = ( ( this.a * cos ) + ( this.b *  - (sin)  ) );
			double b_ = ( ( this.a * sin ) + ( this.b * cos ) );
			double c_ = ( ( this.c * cos ) + ( this.d *  - (sin)  ) );
			double d_ = ( ( this.c * sin ) + ( this.d * cos ) );
			double e_ = ( ( this.e * cos ) + ( this.f *  - (sin)  ) );
			double f_ = ( ( this.e * sin ) + ( this.f * cos ) );
			this.a = a_;
			this.b = b_;
			this.c = c_;
			this.d = d_;
			this.e = e_;
			this.f = f_;
		}
		
		
		public virtual global::hxDaedalus.data.math.Matrix2D clone() {
			return new global::hxDaedalus.data.math.Matrix2D(new global::haxe.lang.Null<double>(this.a, true), new global::haxe.lang.Null<double>(this.b, true), new global::haxe.lang.Null<double>(this.c, true), new global::haxe.lang.Null<double>(this.d, true), new global::haxe.lang.Null<double>(this.e, true), new global::haxe.lang.Null<double>(this.f, true));
		}
		
		
		public virtual void tranform(global::hxDaedalus.data.math.Point2D point) {
			double x = ( ( ( this.a * point.x ) + ( this.c * point.y ) ) + this.e );
			double y = ( ( ( this.b * point.x ) + ( this.d * point.y ) ) + this.f );
			point.x = x;
			point.y = y;
		}
		
		
		public virtual double transformX(double x, double y) {
			return ( ( ( this.a * x ) + ( this.c * y ) ) + this.e );
		}
		
		
		public virtual double transformY(double x, double y) {
			return ( ( ( this.b * x ) + ( this.d * y ) ) + this.f );
		}
		
		
		public virtual void concat(global::hxDaedalus.data.math.Matrix2D matrix) {
			double a_ = ( ( this.a * matrix.a ) + ( this.b * matrix.c ) );
			double b_ = ( ( this.a * matrix.b ) + ( this.b * matrix.d ) );
			double c_ = ( ( this.c * matrix.a ) + ( this.d * matrix.c ) );
			double d_ = ( ( this.c * matrix.b ) + ( this.d * matrix.d ) );
			double e_ = ( ( ( this.e * matrix.a ) + ( this.f * matrix.c ) ) + matrix.e );
			double f_ = ( ( ( this.e * matrix.b ) + ( this.f * matrix.d ) ) + matrix.f );
			this.a = a_;
			this.b = b_;
			this.c = c_;
			this.d = d_;
			this.e = e_;
			this.f = f_;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 102:
					{
						this.f = ((double) (@value) );
						return @value;
					}
					
					
					case 101:
					{
						this.e = ((double) (@value) );
						return @value;
					}
					
					
					case 100:
					{
						this.d = ((double) (@value) );
						return @value;
					}
					
					
					case 99:
					{
						this.c = ((double) (@value) );
						return @value;
					}
					
					
					case 98:
					{
						this.b = ((double) (@value) );
						return @value;
					}
					
					
					case 97:
					{
						this.a = ((double) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 102:
					{
						this.f = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 101:
					{
						this.e = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 100:
					{
						this.d = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 99:
					{
						this.c = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 98:
					{
						this.b = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 97:
					{
						this.a = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1204816148:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "concat", 1204816148)) );
					}
					
					
					case 456429933:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "transformY", 456429933)) );
					}
					
					
					case 456429932:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "transformX", 456429932)) );
					}
					
					
					case 1373423791:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "tranform", 1373423791)) );
					}
					
					
					case 1214452573:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "clone", 1214452573)) );
					}
					
					
					case 1260406363:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "rotate", 1260406363)) );
					}
					
					
					case 2026819210:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "scale", 2026819210)) );
					}
					
					
					case 1233114958:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "translate", 1233114958)) );
					}
					
					
					case 959399230:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "identity", 959399230)) );
					}
					
					
					case 102:
					{
						return this.f;
					}
					
					
					case 101:
					{
						return this.e;
					}
					
					
					case 100:
					{
						return this.d;
					}
					
					
					case 99:
					{
						return this.c;
					}
					
					
					case 98:
					{
						return this.b;
					}
					
					
					case 97:
					{
						return this.a;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 102:
					{
						return this.f;
					}
					
					
					case 101:
					{
						return this.e;
					}
					
					
					case 100:
					{
						return this.d;
					}
					
					
					case 99:
					{
						return this.c;
					}
					
					
					case 98:
					{
						return this.b;
					}
					
					
					case 97:
					{
						return this.a;
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1204816148:
					{
						this.concat(((global::hxDaedalus.data.math.Matrix2D) (dynargs[0]) ));
						break;
					}
					
					
					case 456429933:
					{
						return this.transformY(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[1])) ));
					}
					
					
					case 456429932:
					{
						return this.transformX(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[1])) ));
					}
					
					
					case 1373423791:
					{
						this.tranform(((global::hxDaedalus.data.math.Point2D) (dynargs[0]) ));
						break;
					}
					
					
					case 1214452573:
					{
						return this.clone();
					}
					
					
					case 1260406363:
					{
						this.rotate(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
						break;
					}
					
					
					case 2026819210:
					{
						this.scale(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[1])) ));
						break;
					}
					
					
					case 1233114958:
					{
						this.translate(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[1])) ));
						break;
					}
					
					
					case 959399230:
					{
						this.identity();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::HxArray<string> baseArr) {
			baseArr.push("f");
			baseArr.push("e");
			baseArr.push("d");
			baseArr.push("c");
			baseArr.push("b");
			baseArr.push("a");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


