// Generated by Haxe 4.3.6

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxDaedalus.data.math {
	public class RandGenerator : global::haxe.lang.HxObject {
		
		public RandGenerator(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public RandGenerator(global::haxe.lang.Null<int> seed, global::haxe.lang.Null<int> rangeMin_, global::haxe.lang.Null<int> rangeMax_) {
			global::hxDaedalus.data.math.RandGenerator.__hx_ctor_hxDaedalus_data_math_RandGenerator(this, seed, rangeMin_, rangeMax_);
		}
		
		
		protected static void __hx_ctor_hxDaedalus_data_math_RandGenerator(global::hxDaedalus.data.math.RandGenerator __hx_this, global::haxe.lang.Null<int> seed, global::haxe.lang.Null<int> rangeMin_, global::haxe.lang.Null<int> rangeMax_) {
			unchecked {
				int rangeMax_1 = ( ( ! (rangeMax_.hasValue) ) ? (1) : ((rangeMax_).@value) );
				int rangeMin_1 = ( ( ! (rangeMin_.hasValue) ) ? (0) : ((rangeMin_).@value) );
				int seed1 = ( ( ! (seed.hasValue) ) ? (1234) : ((seed).@value) );
				__hx_this._originalSeed = __hx_this._currSeed = seed1;
				__hx_this.rangeMin = rangeMin_1;
				__hx_this.rangeMax = rangeMax_1;
				__hx_this._numIter = 0;
			}
		}
		
		
		
		
		public int rangeMin;
		
		public int rangeMax;
		
		public int _originalSeed;
		
		public int _currSeed;
		
		public int _rangeMin;
		
		public int _rangeMax;
		
		public int _numIter;
		
		public string _tempString;
		
		public virtual int set_seed(int @value) {
			this._originalSeed = this._currSeed = @value;
			return @value;
		}
		
		
		public virtual int get_seed() {
			return this._originalSeed;
		}
		
		
		public virtual void reset() {
			this._currSeed = this._originalSeed;
			this._numIter = 0;
		}
		
		
		public virtual int next() {
			unchecked {
				double _floatSeed = ( this._currSeed * 1.0 );
				this._tempString = global::HxStd.@string(( _floatSeed * _floatSeed ));
				while (( this._tempString.Length < 8 )) {
					this._tempString = global::haxe.lang.Runtime.concat("0", this._tempString);
				}
				
				this._currSeed = (global::HxStd.parseInt(global::haxe.lang.StringExt.substr(this._tempString, 1, new global::haxe.lang.Null<int>(5, true)))).@value;
				int res = global::HxMath.round(( this.rangeMin + ( ( ((double) (this._currSeed) ) / 99999 ) * (( this.rangeMax - this.rangeMin )) ) ));
				if (( this._currSeed == 0 )) {
					this._currSeed = ( this._originalSeed + this._numIter );
				}
				
				this._numIter++;
				if (( this._numIter == 200 )) {
					this.reset();
				}
				
				return res;
			}
		}
		
		
		public virtual int nextInRange(int rangeMin, int rangeMax) {
			this.rangeMin = rangeMin;
			this.rangeMax = rangeMax;
			return this.next();
		}
		
		
		public virtual void shuffle<T>(global::HxArray<T> array) {
			unchecked {
				int currIdx = array.length;
				while (( currIdx > 0 )) {
					int rndIdx = this.nextInRange(0, ( currIdx - 1 ));
					 -- currIdx;
					T tmp = array[currIdx];
					array[currIdx] = array[rndIdx];
					array[rndIdx] = tmp;
				}
				
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1392034815:
					{
						this._numIter = ((int) (@value) );
						return @value;
					}
					
					
					case 238258246:
					{
						this._rangeMax = ((int) (@value) );
						return @value;
					}
					
					
					case 238260020:
					{
						this._rangeMin = ((int) (@value) );
						return @value;
					}
					
					
					case 1458459874:
					{
						this._currSeed = ((int) (@value) );
						return @value;
					}
					
					
					case 136279361:
					{
						this._originalSeed = ((int) (@value) );
						return @value;
					}
					
					
					case 1184731367:
					{
						this.rangeMax = ((int) (@value) );
						return @value;
					}
					
					
					case 1184733141:
					{
						this.rangeMin = ((int) (@value) );
						return @value;
					}
					
					
					case 1280345457:
					{
						this.set_seed(((int) (@value) ));
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2133439524:
					{
						this._tempString = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1392034815:
					{
						this._numIter = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 238258246:
					{
						this._rangeMax = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 238260020:
					{
						this._rangeMin = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1458459874:
					{
						this._currSeed = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 136279361:
					{
						this._originalSeed = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1184731367:
					{
						this.rangeMax = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1184733141:
					{
						this.rangeMin = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1280345457:
					{
						this.set_seed(((int) (global::haxe.lang.Runtime.toInt(@value)) ));
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1692222969:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "shuffle", 1692222969)) );
					}
					
					
					case 1462104805:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "nextInRange", 1462104805)) );
					}
					
					
					case 1224901875:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "next", 1224901875)) );
					}
					
					
					case 1724402127:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "reset", 1724402127)) );
					}
					
					
					case 1275805946:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_seed", 1275805946)) );
					}
					
					
					case 2053675630:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_seed", 2053675630)) );
					}
					
					
					case 2133439524:
					{
						return this._tempString;
					}
					
					
					case 1392034815:
					{
						return this._numIter;
					}
					
					
					case 238258246:
					{
						return this._rangeMax;
					}
					
					
					case 238260020:
					{
						return this._rangeMin;
					}
					
					
					case 1458459874:
					{
						return this._currSeed;
					}
					
					
					case 136279361:
					{
						return this._originalSeed;
					}
					
					
					case 1184731367:
					{
						return this.rangeMax;
					}
					
					
					case 1184733141:
					{
						return this.rangeMin;
					}
					
					
					case 1280345457:
					{
						return this.get_seed();
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1392034815:
					{
						return ((double) (this._numIter) );
					}
					
					
					case 238258246:
					{
						return ((double) (this._rangeMax) );
					}
					
					
					case 238260020:
					{
						return ((double) (this._rangeMin) );
					}
					
					
					case 1458459874:
					{
						return ((double) (this._currSeed) );
					}
					
					
					case 136279361:
					{
						return ((double) (this._originalSeed) );
					}
					
					
					case 1184731367:
					{
						return ((double) (this.rangeMax) );
					}
					
					
					case 1184733141:
					{
						return ((double) (this.rangeMin) );
					}
					
					
					case 1280345457:
					{
						return ((double) (this.get_seed()) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1692222969:
					{
						this.shuffle<object>(((global::HxArray<object>) (global::HxArray<object>.__hx_cast<object>(((global::HxArray) (dynargs[0]) ))) ));
						break;
					}
					
					
					case 1462104805:
					{
						return this.nextInRange(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ));
					}
					
					
					case 1224901875:
					{
						return this.next();
					}
					
					
					case 1724402127:
					{
						this.reset();
						break;
					}
					
					
					case 1275805946:
					{
						return this.get_seed();
					}
					
					
					case 2053675630:
					{
						return this.set_seed(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::HxArray<string> baseArr) {
			baseArr.push("_tempString");
			baseArr.push("_numIter");
			baseArr.push("_rangeMax");
			baseArr.push("_rangeMin");
			baseArr.push("_currSeed");
			baseArr.push("_originalSeed");
			baseArr.push("rangeMax");
			baseArr.push("rangeMin");
			baseArr.push("seed");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


