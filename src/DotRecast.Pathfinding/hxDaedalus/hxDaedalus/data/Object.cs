// Generated by Haxe 4.3.6

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxDaedalus.data {
	public class Object : global::haxe.lang.HxObject {
		
		static Object() {
			global::hxDaedalus.data.Object.INC = 0;
		}
		
		
		public Object(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Object() {
			global::hxDaedalus.data.Object.__hx_ctor_hxDaedalus_data_Object(this);
		}
		
		
		protected static void __hx_ctor_hxDaedalus_data_Object(global::hxDaedalus.data.Object __hx_this) {
			unchecked {
				__hx_this._id = global::hxDaedalus.data.Object.INC;
				global::hxDaedalus.data.Object.INC++;
				__hx_this._pivotX = ((double) (0) );
				__hx_this._pivotY = ((double) (0) );
				__hx_this._matrix = new global::hxDaedalus.data.math.Matrix2D(default(global::haxe.lang.Null<double>), default(global::haxe.lang.Null<double>), default(global::haxe.lang.Null<double>), default(global::haxe.lang.Null<double>), default(global::haxe.lang.Null<double>), default(global::haxe.lang.Null<double>));
				__hx_this._scaleX = ((double) (1) );
				__hx_this._scaleY = ((double) (1) );
				__hx_this._rotation = ((double) (0) );
				__hx_this._x = ((double) (0) );
				__hx_this._y = ((double) (0) );
				__hx_this._coordinates = new global::HxArray<double>();
				__hx_this._hasChanged = false;
			}
		}
		
		
		public static int INC;
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public int _id;
		
		public global::hxDaedalus.data.math.Matrix2D _matrix;
		
		public global::HxArray<double> _coordinates;
		
		public global::hxDaedalus.data.ConstraintShape _constraintShape;
		
		public double _pivotX;
		
		public double _pivotY;
		
		public double _scaleX;
		
		public double _scaleY;
		
		public double _rotation;
		
		public double _x;
		
		public double _y;
		
		public bool _hasChanged;
		
		public virtual int get_id() {
			return this._id;
		}
		
		
		public virtual void dispose() {
			this._matrix = null;
			this._coordinates = null;
			this._constraintShape = null;
		}
		
		
		public virtual void updateValuesFromMatrix() {
		}
		
		
		public virtual void updateMatrixFromValues() {
			this._matrix.identity();
			this._matrix.translate( - (this._pivotX) ,  - (this._pivotY) );
			this._matrix.scale(this._scaleX, this._scaleY);
			this._matrix.rotate(this._rotation);
			this._matrix.translate(this._x, this._y);
		}
		
		
		public virtual double get_pivotX() {
			return this._pivotX;
		}
		
		
		public virtual double set_pivotX(double @value) {
			this._pivotX = @value;
			this._hasChanged = true;
			return @value;
		}
		
		
		public virtual double get_pivotY() {
			return this._pivotY;
		}
		
		
		public virtual double set_pivotY(double @value) {
			this._pivotY = @value;
			this._hasChanged = true;
			return @value;
		}
		
		
		public virtual double get_scaleX() {
			return this._scaleX;
		}
		
		
		public virtual double set_scaleX(double @value) {
			if (( this._scaleX != @value )) {
				this._scaleX = @value;
				this._hasChanged = true;
			}
			
			return @value;
		}
		
		
		public virtual double get_scaleY() {
			return this._scaleY;
		}
		
		
		public virtual double set_scaleY(double @value) {
			if (( this._scaleY != @value )) {
				this._scaleY = @value;
				this._hasChanged = true;
			}
			
			return @value;
		}
		
		
		public virtual double get_rotation() {
			return this._rotation;
		}
		
		
		public virtual double set_rotation(double @value) {
			if (( this._rotation != @value )) {
				this._rotation = @value;
				this._hasChanged = true;
			}
			
			return @value;
		}
		
		
		public virtual double get_x() {
			return this._x;
		}
		
		
		public virtual double set_x(double @value) {
			if (( this._x != @value )) {
				this._x = @value;
				this._hasChanged = true;
			}
			
			return @value;
		}
		
		
		public virtual double get_y() {
			return this._y;
		}
		
		
		public virtual double set_y(double @value) {
			if (( this._y != @value )) {
				this._y = @value;
				this._hasChanged = true;
			}
			
			return @value;
		}
		
		
		public virtual global::hxDaedalus.data.math.Matrix2D get_matrix() {
			return this._matrix;
		}
		
		
		public virtual global::hxDaedalus.data.math.Matrix2D set_matrix(global::hxDaedalus.data.math.Matrix2D @value) {
			this._matrix = @value;
			this._hasChanged = true;
			return @value;
		}
		
		
		public virtual global::HxArray<double> get_coordinates() {
			return this._coordinates;
		}
		
		
		public virtual global::HxArray<double> set_coordinates(global::HxArray<double> @value) {
			this._coordinates = @value;
			this._hasChanged = true;
			return @value;
		}
		
		
		public virtual global::hxDaedalus.data.ConstraintShape get_constraintShape() {
			return this._constraintShape;
		}
		
		
		public virtual global::hxDaedalus.data.ConstraintShape set_constraintShape(global::hxDaedalus.data.ConstraintShape @value) {
			this._constraintShape = @value;
			this._hasChanged = true;
			return @value;
		}
		
		
		public virtual bool get_hasChanged() {
			return this._hasChanged;
		}
		
		
		public virtual bool set_hasChanged(bool @value) {
			this._hasChanged = @value;
			return @value;
		}
		
		
		public virtual global::HxArray<object> get_edges() {
			global::HxArray<object> res = new global::HxArray<object>();
			global::HxArray<object> seg = this._constraintShape.segments;
			{
				int _g = 0;
				int _g1 = seg.length;
				while (( _g < _g1 )) {
					int i = _g++;
					{
						int _g2 = 0;
						int _g3 = ((global::hxDaedalus.data.ConstraintSegment) (seg[i]) ).get_edges().length;
						while (( _g2 < _g3 )) {
							int j = _g2++;
							res.push(((global::hxDaedalus.data.Edge) (((global::hxDaedalus.data.ConstraintSegment) (seg[i]) ).get_edges()[j]) ));
						}
						
					}
					
				}
				
			}
			
			return res;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 21306:
					{
						this._y = ((double) (@value) );
						return @value;
					}
					
					
					case 21305:
					{
						this._x = ((double) (@value) );
						return @value;
					}
					
					
					case 1344025757:
					{
						this._rotation = ((double) (@value) );
						return @value;
					}
					
					
					case 714931246:
					{
						this._scaleY = ((double) (@value) );
						return @value;
					}
					
					
					case 714931245:
					{
						this._scaleX = ((double) (@value) );
						return @value;
					}
					
					
					case 2044080374:
					{
						this._pivotY = ((double) (@value) );
						return @value;
					}
					
					
					case 2044080373:
					{
						this._pivotX = ((double) (@value) );
						return @value;
					}
					
					
					case 4747770:
					{
						this._id = ((int) (@value) );
						return @value;
					}
					
					
					case 121:
					{
						this.set_y(@value);
						return @value;
					}
					
					
					case 120:
					{
						this.set_x(@value);
						return @value;
					}
					
					
					case 143015230:
					{
						this.set_rotation(@value);
						return @value;
					}
					
					
					case 1009117839:
					{
						this.set_scaleY(@value);
						return @value;
					}
					
					
					case 1009117838:
					{
						this.set_scaleX(@value);
						return @value;
					}
					
					
					case 190783319:
					{
						this.set_pivotY(@value);
						return @value;
					}
					
					
					case 190783318:
					{
						this.set_pivotX(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 705324505:
					{
						this._hasChanged = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 21306:
					{
						this._y = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 21305:
					{
						this._x = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 1344025757:
					{
						this._rotation = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 714931246:
					{
						this._scaleY = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 714931245:
					{
						this._scaleX = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 2044080374:
					{
						this._pivotY = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 2044080373:
					{
						this._pivotX = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 722347013:
					{
						this._constraintShape = ((global::hxDaedalus.data.ConstraintShape) (@value) );
						return @value;
					}
					
					
					case 1541382396:
					{
						this._coordinates = ((global::HxArray<double>) (global::HxArray<object>.__hx_cast<double>(((global::HxArray) (@value) ))) );
						return @value;
					}
					
					
					case 708790240:
					{
						this._matrix = ((global::hxDaedalus.data.math.Matrix2D) (@value) );
						return @value;
					}
					
					
					case 4747770:
					{
						this._id = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1468045498:
					{
						this.set_hasChanged(global::haxe.lang.Runtime.toBool(@value));
						return @value;
					}
					
					
					case 1076814212:
					{
						this.set_constraintShape(((global::hxDaedalus.data.ConstraintShape) (@value) ));
						return @value;
					}
					
					
					case 1976955643:
					{
						this.set_coordinates(((global::HxArray<double>) (global::HxArray<object>.__hx_cast<double>(((global::HxArray) (@value) ))) ));
						return @value;
					}
					
					
					case 1002976833:
					{
						this.set_matrix(((global::hxDaedalus.data.math.Matrix2D) (@value) ));
						return @value;
					}
					
					
					case 121:
					{
						this.set_y(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 120:
					{
						this.set_x(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 143015230:
					{
						this.set_rotation(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 1009117839:
					{
						this.set_scaleY(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 1009117838:
					{
						this.set_scaleX(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 190783319:
					{
						this.set_pivotY(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 190783318:
					{
						this.set_pivotX(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 764004845:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_edges", 764004845)) );
					}
					
					
					case 1838549367:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_hasChanged", 1838549367)) );
					}
					
					
					case 1299587331:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_hasChanged", 1299587331)) );
					}
					
					
					case 131507111:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_constraintShape", 131507111)) );
					}
					
					
					case 1262071963:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_constraintShape", 1262071963)) );
					}
					
					
					case 847456158:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_coordinates", 847456158)) );
					}
					
					
					case 918006418:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_coordinates", 918006418)) );
					}
					
					
					case 801981566:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_matrix", 801981566)) );
					}
					
					
					case 743417354:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_matrix", 743417354)) );
					}
					
					
					case 2049940316:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_y", 2049940316)) );
					}
					
					
					case 291546448:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_y", 291546448)) );
					}
					
					
					case 2049940315:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_x", 2049940315)) );
					}
					
					
					case 291546447:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_x", 291546447)) );
					}
					
					
					case 1385764027:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_rotation", 1385764027)) );
					}
					
					
					case 1033892167:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_rotation", 1033892167)) );
					}
					
					
					case 808122572:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_scaleY", 808122572)) );
					}
					
					
					case 749558360:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_scaleY", 749558360)) );
					}
					
					
					case 808122571:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_scaleX", 808122571)) );
					}
					
					
					case 749558359:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_scaleX", 749558359)) );
					}
					
					
					case 2137271700:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_pivotY", 2137271700)) );
					}
					
					
					case 2078707488:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_pivotY", 2078707488)) );
					}
					
					
					case 2137271699:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_pivotX", 2137271699)) );
					}
					
					
					case 2078707487:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_pivotX", 2078707487)) );
					}
					
					
					case 1745601206:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "updateMatrixFromValues", 1745601206)) );
					}
					
					
					case 89093622:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "updateValuesFromMatrix", 89093622)) );
					}
					
					
					case 994869407:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "dispose", 994869407)) );
					}
					
					
					case 590344996:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_id", 590344996)) );
					}
					
					
					case 705324505:
					{
						return this._hasChanged;
					}
					
					
					case 21306:
					{
						return this._y;
					}
					
					
					case 21305:
					{
						return this._x;
					}
					
					
					case 1344025757:
					{
						return this._rotation;
					}
					
					
					case 714931246:
					{
						return this._scaleY;
					}
					
					
					case 714931245:
					{
						return this._scaleX;
					}
					
					
					case 2044080374:
					{
						return this._pivotY;
					}
					
					
					case 2044080373:
					{
						return this._pivotX;
					}
					
					
					case 722347013:
					{
						return this._constraintShape;
					}
					
					
					case 1541382396:
					{
						return this._coordinates;
					}
					
					
					case 708790240:
					{
						return this._matrix;
					}
					
					
					case 4747770:
					{
						return this._id;
					}
					
					
					case 1776315798:
					{
						return this.get_edges();
					}
					
					
					case 1468045498:
					{
						return this.get_hasChanged();
					}
					
					
					case 1076814212:
					{
						return this.get_constraintShape();
					}
					
					
					case 1976955643:
					{
						return this.get_coordinates();
					}
					
					
					case 1002976833:
					{
						return this.get_matrix();
					}
					
					
					case 121:
					{
						return this.get_y();
					}
					
					
					case 120:
					{
						return this.get_x();
					}
					
					
					case 143015230:
					{
						return this.get_rotation();
					}
					
					
					case 1009117839:
					{
						return this.get_scaleY();
					}
					
					
					case 1009117838:
					{
						return this.get_scaleX();
					}
					
					
					case 190783319:
					{
						return this.get_pivotY();
					}
					
					
					case 190783318:
					{
						return this.get_pivotX();
					}
					
					
					case 23515:
					{
						return this.get_id();
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 21306:
					{
						return this._y;
					}
					
					
					case 21305:
					{
						return this._x;
					}
					
					
					case 1344025757:
					{
						return this._rotation;
					}
					
					
					case 714931246:
					{
						return this._scaleY;
					}
					
					
					case 714931245:
					{
						return this._scaleX;
					}
					
					
					case 2044080374:
					{
						return this._pivotY;
					}
					
					
					case 2044080373:
					{
						return this._pivotX;
					}
					
					
					case 4747770:
					{
						return ((double) (this._id) );
					}
					
					
					case 121:
					{
						return this.get_y();
					}
					
					
					case 120:
					{
						return this.get_x();
					}
					
					
					case 143015230:
					{
						return this.get_rotation();
					}
					
					
					case 1009117839:
					{
						return this.get_scaleY();
					}
					
					
					case 1009117838:
					{
						return this.get_scaleX();
					}
					
					
					case 190783319:
					{
						return this.get_pivotY();
					}
					
					
					case 190783318:
					{
						return this.get_pivotX();
					}
					
					
					case 23515:
					{
						return ((double) (this.get_id()) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 764004845:
					{
						return this.get_edges();
					}
					
					
					case 1838549367:
					{
						return this.set_hasChanged(global::haxe.lang.Runtime.toBool(dynargs[0]));
					}
					
					
					case 1299587331:
					{
						return this.get_hasChanged();
					}
					
					
					case 131507111:
					{
						return this.set_constraintShape(((global::hxDaedalus.data.ConstraintShape) (dynargs[0]) ));
					}
					
					
					case 1262071963:
					{
						return this.get_constraintShape();
					}
					
					
					case 847456158:
					{
						return this.set_coordinates(((global::HxArray<double>) (global::HxArray<object>.__hx_cast<double>(((global::HxArray) (dynargs[0]) ))) ));
					}
					
					
					case 918006418:
					{
						return this.get_coordinates();
					}
					
					
					case 801981566:
					{
						return this.set_matrix(((global::hxDaedalus.data.math.Matrix2D) (dynargs[0]) ));
					}
					
					
					case 743417354:
					{
						return this.get_matrix();
					}
					
					
					case 2049940316:
					{
						return this.set_y(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 291546448:
					{
						return this.get_y();
					}
					
					
					case 2049940315:
					{
						return this.set_x(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 291546447:
					{
						return this.get_x();
					}
					
					
					case 1385764027:
					{
						return this.set_rotation(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 1033892167:
					{
						return this.get_rotation();
					}
					
					
					case 808122572:
					{
						return this.set_scaleY(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 749558360:
					{
						return this.get_scaleY();
					}
					
					
					case 808122571:
					{
						return this.set_scaleX(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 749558359:
					{
						return this.get_scaleX();
					}
					
					
					case 2137271700:
					{
						return this.set_pivotY(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 2078707488:
					{
						return this.get_pivotY();
					}
					
					
					case 2137271699:
					{
						return this.set_pivotX(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 2078707487:
					{
						return this.get_pivotX();
					}
					
					
					case 1745601206:
					{
						this.updateMatrixFromValues();
						break;
					}
					
					
					case 89093622:
					{
						this.updateValuesFromMatrix();
						break;
					}
					
					
					case 994869407:
					{
						this.dispose();
						break;
					}
					
					
					case 590344996:
					{
						return this.get_id();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::HxArray<string> baseArr) {
			baseArr.push("_hasChanged");
			baseArr.push("_y");
			baseArr.push("_x");
			baseArr.push("_rotation");
			baseArr.push("_scaleY");
			baseArr.push("_scaleX");
			baseArr.push("_pivotY");
			baseArr.push("_pivotX");
			baseArr.push("_constraintShape");
			baseArr.push("_coordinates");
			baseArr.push("_matrix");
			baseArr.push("_id");
			baseArr.push("edges");
			baseArr.push("hasChanged");
			baseArr.push("constraintShape");
			baseArr.push("coordinates");
			baseArr.push("matrix");
			baseArr.push("y");
			baseArr.push("x");
			baseArr.push("rotation");
			baseArr.push("scaleY");
			baseArr.push("scaleX");
			baseArr.push("pivotY");
			baseArr.push("pivotX");
			baseArr.push("id");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


