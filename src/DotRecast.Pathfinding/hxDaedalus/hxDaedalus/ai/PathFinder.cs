// Generated by Haxe 4.3.6

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxDaedalus.ai {
	public class PathFinder : global::haxe.lang.HxObject {
		
		public PathFinder(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public PathFinder() {
			global::hxDaedalus.ai.PathFinder.__hx_ctor_hxDaedalus_ai_PathFinder(this);
		}
		
		
		protected static void __hx_ctor_hxDaedalus_ai_PathFinder(global::hxDaedalus.ai.PathFinder __hx_this) {
			__hx_this.astar = new global::hxDaedalus.ai.AStar();
			__hx_this.funnel = new global::hxDaedalus.ai.Funnel();
			__hx_this.listFaces = new global::HxArray<object>();
			__hx_this.listEdges = new global::HxArray<object>();
		}
		
		
		public global::hxDaedalus.ai.EntityAI entity;
		
		
		
		public global::hxDaedalus.data.Mesh _mesh;
		
		public global::hxDaedalus.ai.AStar astar;
		
		public global::hxDaedalus.ai.Funnel funnel;
		
		public double radius;
		
		public global::HxArray<object> listFaces;
		
		public global::HxArray<object> listEdges;
		
		public virtual void dispose() {
			this._mesh = null;
			this.astar.dispose();
			this.astar = null;
			this.funnel.dispose();
			this.funnel = null;
			this.listEdges = null;
			this.listFaces = null;
		}
		
		
		public virtual global::hxDaedalus.data.Mesh get_mesh() {
			return this._mesh;
		}
		
		
		public virtual global::hxDaedalus.data.Mesh set_mesh(global::hxDaedalus.data.Mesh @value) {
			this._mesh = @value;
			this.astar.set_mesh(this._mesh);
			return @value;
		}
		
		
		public virtual void findPath(double toX, double toY, global::HxArray<double> resultPath) {
			resultPath.spliceVoid(0, resultPath.length);
			if (global::hxDaedalus.data.math.Geom2D.isCircleIntersectingAnyConstraint(toX, toY, this.entity.get_radius(), this._mesh)) {
				return;
			}
			
			this.astar.set_radius(this.entity.get_radius());
			this.funnel.set_radius(this.entity.get_radius());
			this.listFaces.spliceVoid(0, this.listFaces.length);
			this.listEdges.spliceVoid(0, this.listEdges.length);
			this.astar.findPath(this.entity.x, this.entity.y, toX, toY, this.listFaces, this.listEdges);
			if (( this.listFaces.length == 0 )) {
				return;
			}
			
			this.funnel.findPath(this.entity.x, this.entity.y, toX, toY, this.listFaces, this.listEdges, resultPath);
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 821481554:
					{
						this.radius = ((double) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2174040:
					{
						this.listEdges = ((global::HxArray<object>) (global::HxArray<object>.__hx_cast<object>(((global::HxArray) (@value) ))) );
						return @value;
					}
					
					
					case 294196216:
					{
						this.listFaces = ((global::HxArray<object>) (global::HxArray<object>.__hx_cast<object>(((global::HxArray) (@value) ))) );
						return @value;
					}
					
					
					case 821481554:
					{
						this.radius = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 1867642230:
					{
						this.funnel = ((global::hxDaedalus.ai.Funnel) (@value) );
						return @value;
					}
					
					
					case 641345715:
					{
						this.astar = ((global::hxDaedalus.ai.AStar) (@value) );
						return @value;
					}
					
					
					case 2070570444:
					{
						this._mesh = ((global::hxDaedalus.data.Mesh) (@value) );
						return @value;
					}
					
					
					case 1213811181:
					{
						this.set_mesh(((global::hxDaedalus.data.Mesh) (@value) ));
						return @value;
					}
					
					
					case 85725987:
					{
						this.entity = ((global::hxDaedalus.ai.EntityAI) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 484831870:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "findPath", 484831870)) );
					}
					
					
					case 1987141354:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_mesh", 1987141354)) );
					}
					
					
					case 1209271670:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_mesh", 1209271670)) );
					}
					
					
					case 994869407:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "dispose", 994869407)) );
					}
					
					
					case 2174040:
					{
						return this.listEdges;
					}
					
					
					case 294196216:
					{
						return this.listFaces;
					}
					
					
					case 821481554:
					{
						return this.radius;
					}
					
					
					case 1867642230:
					{
						return this.funnel;
					}
					
					
					case 641345715:
					{
						return this.astar;
					}
					
					
					case 2070570444:
					{
						return this._mesh;
					}
					
					
					case 1213811181:
					{
						return this.get_mesh();
					}
					
					
					case 85725987:
					{
						return this.entity;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 821481554:
					{
						return this.radius;
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 484831870:
					{
						this.findPath(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[1])) ), ((global::HxArray<double>) (global::HxArray<object>.__hx_cast<double>(((global::HxArray) (dynargs[2]) ))) ));
						break;
					}
					
					
					case 1987141354:
					{
						return this.set_mesh(((global::hxDaedalus.data.Mesh) (dynargs[0]) ));
					}
					
					
					case 1209271670:
					{
						return this.get_mesh();
					}
					
					
					case 994869407:
					{
						this.dispose();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::HxArray<string> baseArr) {
			baseArr.push("listEdges");
			baseArr.push("listFaces");
			baseArr.push("radius");
			baseArr.push("funnel");
			baseArr.push("astar");
			baseArr.push("_mesh");
			baseArr.push("mesh");
			baseArr.push("entity");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


