// Generated by Haxe 4.3.6

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxDaedalus.ai {
	public class EntityAI : global::haxe.lang.HxObject {
		
		static EntityAI() {
			unchecked{
				global::hxDaedalus.ai.EntityAI.NUM_SEGMENTS = 6;
			}
		}
		
		
		public EntityAI(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public EntityAI() {
			global::hxDaedalus.ai.EntityAI.__hx_ctor_hxDaedalus_ai_EntityAI(this);
		}
		
		
		protected static void __hx_ctor_hxDaedalus_ai_EntityAI(global::hxDaedalus.ai.EntityAI __hx_this) {
			unchecked {
				__hx_this._radius = ((double) (10) );
				__hx_this.x = __hx_this.y = ((double) (0) );
				__hx_this.dirNormX = ((double) (1) );
				__hx_this.dirNormY = ((double) (0) );
			}
		}
		
		
		public static int NUM_SEGMENTS;
		
		
		
		public double dirNormY;
		
		public double dirNormX;
		
		public double y;
		
		public double x;
		
		
		
		
		
		public double _radius;
		
		public double _radiusSquared;
		
		public double _x;
		
		public double _y;
		
		public double _dirNormX;
		
		public double _dirNormY;
		
		public global::hxDaedalus.data.Object _approximateObject;
		
		public virtual void buildApproximation() {
			unchecked {
				this._approximateObject = new global::hxDaedalus.data.Object();
				this._approximateObject.get_matrix().translate(this.x, this.y);
				global::HxArray<double> coordinates = new global::HxArray<double>();
				this._approximateObject.set_coordinates(coordinates);
				if (( this._radius == 0 )) {
					return;
				}
				
				{
					int _g = 0;
					while (( _g < 6 )) {
						int i = _g++;
						coordinates.push(( this._radius * global::System.Math.Cos(((double) (( ( ( 2 * global::HxMath.PI ) * i ) / 6 )) )) ));
						coordinates.push(( this._radius * global::System.Math.Sin(((double) (( ( ( 2 * global::HxMath.PI ) * i ) / 6 )) )) ));
						coordinates.push(( this._radius * global::System.Math.Cos(((double) (( ( ( 2 * global::HxMath.PI ) * (( i + 1 )) ) / 6 )) )) ));
						coordinates.push(( this._radius * global::System.Math.Sin(((double) (( ( ( 2 * global::HxMath.PI ) * (( i + 1 )) ) / 6 )) )) ));
					}
					
				}
				
			}
		}
		
		
		public virtual global::hxDaedalus.data.Object get_approximateObject() {
			this._approximateObject.get_matrix().identity();
			this._approximateObject.get_matrix().translate(this.x, this.y);
			return this._approximateObject;
		}
		
		
		public virtual double get_radius() {
			return this._radius;
		}
		
		
		public virtual double get_radiusSquared() {
			return this._radiusSquared;
		}
		
		
		public virtual double set_radius(double @value) {
			this._radius = @value;
			this._radiusSquared = ( this._radius * this._radius );
			return @value;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1967010159:
					{
						this._dirNormY = ((double) (@value) );
						return @value;
					}
					
					
					case 1967010158:
					{
						this._dirNormX = ((double) (@value) );
						return @value;
					}
					
					
					case 21306:
					{
						this._y = ((double) (@value) );
						return @value;
					}
					
					
					case 21305:
					{
						this._x = ((double) (@value) );
						return @value;
					}
					
					
					case 1327324982:
					{
						this._radiusSquared = ((double) (@value) );
						return @value;
					}
					
					
					case 527294961:
					{
						this._radius = ((double) (@value) );
						return @value;
					}
					
					
					case 821481554:
					{
						this.set_radius(@value);
						return @value;
					}
					
					
					case 120:
					{
						this.x = ((double) (@value) );
						return @value;
					}
					
					
					case 121:
					{
						this.y = ((double) (@value) );
						return @value;
					}
					
					
					case 765999631:
					{
						this.dirNormX = ((double) (@value) );
						return @value;
					}
					
					
					case 765999632:
					{
						this.dirNormY = ((double) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1259363060:
					{
						this._approximateObject = ((global::hxDaedalus.data.Object) (@value) );
						return @value;
					}
					
					
					case 1967010159:
					{
						this._dirNormY = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 1967010158:
					{
						this._dirNormX = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 21306:
					{
						this._y = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 21305:
					{
						this._x = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 1327324982:
					{
						this._radiusSquared = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 527294961:
					{
						this._radius = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 821481554:
					{
						this.set_radius(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 120:
					{
						this.x = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 121:
					{
						this.y = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 765999631:
					{
						this.dirNormX = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 765999632:
					{
						this.dirNormY = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 620486287:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_radius", 620486287)) );
					}
					
					
					case 389773900:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_radiusSquared", 389773900)) );
					}
					
					
					case 561922075:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_radius", 561922075)) );
					}
					
					
					case 1990768906:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_approximateObject", 1990768906)) );
					}
					
					
					case 147227497:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "buildApproximation", 147227497)) );
					}
					
					
					case 1259363060:
					{
						return this._approximateObject;
					}
					
					
					case 1967010159:
					{
						return this._dirNormY;
					}
					
					
					case 1967010158:
					{
						return this._dirNormX;
					}
					
					
					case 21306:
					{
						return this._y;
					}
					
					
					case 21305:
					{
						return this._x;
					}
					
					
					case 1327324982:
					{
						return this._radiusSquared;
					}
					
					
					case 527294961:
					{
						return this._radius;
					}
					
					
					case 281767669:
					{
						return this.get_radiusSquared();
					}
					
					
					case 821481554:
					{
						return this.get_radius();
					}
					
					
					case 120:
					{
						return this.x;
					}
					
					
					case 121:
					{
						return this.y;
					}
					
					
					case 765999631:
					{
						return this.dirNormX;
					}
					
					
					case 765999632:
					{
						return this.dirNormY;
					}
					
					
					case 2012919347:
					{
						return this.get_approximateObject();
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1967010159:
					{
						return this._dirNormY;
					}
					
					
					case 1967010158:
					{
						return this._dirNormX;
					}
					
					
					case 21306:
					{
						return this._y;
					}
					
					
					case 21305:
					{
						return this._x;
					}
					
					
					case 1327324982:
					{
						return this._radiusSquared;
					}
					
					
					case 527294961:
					{
						return this._radius;
					}
					
					
					case 281767669:
					{
						return this.get_radiusSquared();
					}
					
					
					case 821481554:
					{
						return this.get_radius();
					}
					
					
					case 120:
					{
						return this.x;
					}
					
					
					case 121:
					{
						return this.y;
					}
					
					
					case 765999631:
					{
						return this.dirNormX;
					}
					
					
					case 765999632:
					{
						return this.dirNormY;
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 620486287:
					{
						return this.set_radius(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 389773900:
					{
						return this.get_radiusSquared();
					}
					
					
					case 561922075:
					{
						return this.get_radius();
					}
					
					
					case 1990768906:
					{
						return this.get_approximateObject();
					}
					
					
					case 147227497:
					{
						this.buildApproximation();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::HxArray<string> baseArr) {
			baseArr.push("_approximateObject");
			baseArr.push("_dirNormY");
			baseArr.push("_dirNormX");
			baseArr.push("_y");
			baseArr.push("_x");
			baseArr.push("_radiusSquared");
			baseArr.push("_radius");
			baseArr.push("radiusSquared");
			baseArr.push("radius");
			baseArr.push("x");
			baseArr.push("y");
			baseArr.push("dirNormX");
			baseArr.push("dirNormY");
			baseArr.push("approximateObject");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


